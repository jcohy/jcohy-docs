# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Jcohy-Docs CI with Gradle

on:
  workflow_dispatch:
    inputs:
      project:
        description: '请选择构建项目名'
        required: true
        default: 'spring-boot'
        options:   ['all','spring-boot', 'spring-framework', 'spring-security','spring-hateoas','rfc','spring-graphql','spring-data-commons','spring-data-jpa','spring-data-jdbc','spring-data-redis','spring-data-rest','spring-data-elasticsearch','spring-data-r2dbc','spring-data-mongodb', 'reactor','reactive-stream-jvm','book-reactive-spring','spring-cloud-gateway']

permissions: read-all

jobs:
  build:
    env:
      project_mapping: |
        "spring-framework": ":spring-framework"
        "spring-security": ":spring-security"
        "spring-hateoas": ":spring-hateoas"
        "spring-boot": ":spring-boot:spring-boot"
        "spring-boot-actuator-autoconfigure": ":spring-boot:spring-boot-actuator-autoconfigure"
        "spring-gradle-plugins": ":spring-boot:spring-gradle-plugins"
        "spring-maven-plugins": ":spring-boot:spring-maven-plugins"
        "reactor": ":reactive:reactor"
        "reactive-stream-jvm": ":reactive:reactive-stream-jvm"
        "spring-data-commons": ":spring-data:spring-data-commons"
        "spring-data-jdbc": ":spring-data:spring-data-jdbc"
        "spring-data-jpa": ":spring-data:spring-data-jpa"
        "spring-data-redis": ":spring-data:spring-data-redis"
        "spring-data-rest": ":spring-data:spring-data-rest"
        "spring-data-elasticsearch": ":spring-data:spring-data-elasticsearch"
        "spring-data-r2dbc": ":spring-data:spring-data-r2dbc"
        "spring-data-mongodb": ":spring-data:spring-data-mongodb"
        "spring-cloud-gateway": ":spring-cloud:spring-cloud-gateway"
        "rfc": "rfc"
        "spring-graphql": ":spring-graphql"
        "book-reactive-spring": ":book:reactive-spring"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      - name: Build All Project
        if: ${{ github.event.inputs.project == 'all'}}
        run: ./gradlew clean aggregatedAsciidoctor -Dfile.encoding=UTF-8
      - name: Build All Project
        if: ${{ github.event.inputs.project != 'all'}}
        run: |
          task =${{ fromJson(env.project_mapping)[github.event.inputs.project]}}
          ./gradlew clean $task:aggregatedProject -Dfile.encoding=UTF-8
      - name: Upload To AliOSS
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: uploadOssFiles
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
